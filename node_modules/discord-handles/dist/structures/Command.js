"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * A command.
 * ```js
 * const { Command } = require('discord-handles');
 * module.exports = class extends Command {
 *   static get triggers() {
 *     return ['ping', 'pung', 'poing', 'pong'];
 *   }
 *
 *   exec() {
 *     return this.response.success(`${this.trigger} ${Date.now() - this.message.createdTimestamp}ms`);
 *   }
 * };
 */
class Command {
    constructor(client, { trigger, message, body }) {
        this.handles = client;
        this.trigger = trigger;
        this.message = message;
        this.body = body;
        this.args = null;
        this.response = new this.handles.Response(this.message);
    }
    /**
     * The Discord.js client.
     */
    get client() {
        return this.message.client;
    }
    /**
     * The guild this command is in.
     */
    get guild() {
        return this.message.guild;
    }
    /**
     * The channel this command is in.
     */
    get channel() {
        return this.message.channel;
    }
    /**
     * The author of this command.
     */
    get author() {
        return this.message.author;
    }
    get member() {
        return this.message.member;
    }
    /**
     * Ensure unique commands for an author in a channel.
     * Format: "authorID:channelID"
     */
    get session() {
        return `${this.message.author.id}:${this.message.channel.id}`;
    }
    /**
     * Executed prior to {@link Command#exec}. Should be used for middleware/validation.
     * ```js
     * async pre() {
     *   await new handles.Argument(this, 'someArgument')
     *     .setResolver(c => c === 'dank memes' ? 'top kek' : null);
     * }
     */
    pre() {
        // implemented by command
    }
    /**
     * The command execution method
     */
    exec() {
        // implemented by command
    }
    /**
     * Executed after {@link Command#exec}. Can be used for responses.
     */
    post() {
        // implemented by command
    }
    /**
     * Executed when any of the command execution methods error. Any errors here will be discarded.
     */
    error() {
        // implemented by command
    }
}
exports.default = Command;

//# sourceMappingURL=Command.js.map
