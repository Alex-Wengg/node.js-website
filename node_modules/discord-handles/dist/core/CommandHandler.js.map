{"version":3,"sources":["core/CommandHandler.ts"],"names":[],"mappings":"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","file":"CommandHandler.js","sourcesContent":["import BaseError from '../errors/BaseError';\n\nimport Command from '../structures/Command';\n\nimport HandlesClient from './Client';\nimport CommandRegistry from './CommandRegistry';\n\nimport { IConfig } from '../interfaces/Config';\n\nimport { Message } from 'discord.js';\n\nexport type MessageValidator = (m: Message) => string | null | Promise<string | null>;\n\n/**\n * Class for handling a command.\n */\nexport default class CommandHandler {\n\n  /**\n   * The client.\n   */\n  public readonly handles: HandlesClient;\n\n  /**\n   * Sessions to ignore.\n   */\n  public readonly ignore: string[] = [];\n\n  /**\n   * Whether the [[handle]] method should always resolve with void (use when relying on events to catch errors).\n   */\n  public silent: boolean;\n\n  /**\n   * The message validator from config.\n   */\n  public validator: MessageValidator;\n\n  /**\n   * Methods to run before each command. Executed in sequence before the command's `pre` method.\n   * **Deprecated:** the command parameter will be removed.\n   */\n  public pre: Array<(this: Command, cmd: Command) => any> = [];\n\n  /**\n   * Methods to run after each command.  Executed in sequence after the command's `post` method.\n   * **Deprecated:** the command parameter will be removed.\n   */\n  public post: Array<(this: Command, cmd: Command) => any> = [];\n\n  /**\n   * Recently executed commands. Stored regardless of success or failure.\n   */\n  public executed: Command[] = [];\n\n  constructor(handles: HandlesClient, config: IConfig) {\n    this.handles = handles;\n    this.silent = typeof config.silent === 'undefined' ? true : config.silent;\n\n    if (\n      typeof config.validator !== 'function' &&\n      (!this.handles.prefixes || !this.handles.prefixes.size)\n    ) throw new Error('Unable to validate commands: no validator or prefixes were provided.');\n\n    this.validator = config.validator || ((message) => {\n      for (const p of this.handles.prefixes) {\n        if (message.content.startsWith(p)) {\n          return message.content.substring(p.length).trim();\n        }\n      }\n\n      return null;\n    });\n  }\n\n  /**\n   * Resolve a command from a message.\n   */\n  public async resolve(message: Message): Promise<Command | null> {\n    const content = await this.validator(message);\n    if (typeof content !== 'string' || !content) return null;\n\n    const match = content.match(/^([^\\s]+)(.*)/);\n    if (match) {\n      const [, cmd, commandContent] = match;\n      const mod = this.handles.registry.get(cmd);\n\n      if (mod) {\n        return new mod(this.handles, {\n          body: commandContent.trim(),\n          message,\n          trigger: cmd,\n        });\n      }\n    }\n\n    for (const [trigger, command] of this.handles.registry) {\n      let body = null;\n      if (trigger instanceof RegExp) {\n        const match = content.match(trigger);\n        if (match) body = match[0].trim();\n      } else if (typeof trigger === 'string') {\n        // if the trigger is lowercase, make the command case-insensitive\n        if ((trigger.toLowerCase() === trigger ? content.toLowerCase() : content).startsWith(trigger)) {\n          body = content.substring(trigger.length).trim();\n        }\n      }\n\n      if (body !== null) {\n        const cmd = new command(this.handles, {\n          body,\n          message,\n          trigger,\n        });\n\n        if (!this.ignore.includes(cmd.session)) return cmd;\n      }\n    }\n\n    return null;\n  }\n\n  /**\n   * Execute a command message.\n   */\n  public async exec(cmd: Command): Promise<any> {\n    this._ignore(cmd.session);\n    this.handles.emit('commandStarted', cmd);\n\n    try {\n      // TODO: Remove the param on global pre and post for v8\n      for (const fn of this.pre) await fn.call(cmd, cmd);\n      await cmd.pre.call(cmd);\n      const result = await cmd.exec.call(cmd);\n      await cmd.post.call(cmd);\n      for (const fn of this.post) await fn.call(cmd, cmd);\n\n      this.handles.emit('commandFinished', { command: cmd, result });\n      return this.silent ? result : undefined;\n    } catch (e) {\n      try {\n        await cmd.error();\n      } catch (e) {\n        // do nothing\n      }\n\n      if (e instanceof BaseError) {\n        this.handles.emit('commandFailed', { command: cmd, error: e });\n        if (!this.silent) return e;\n      } else {\n        this.handles.emit('commandError', { command: cmd, error: e });\n        if (!this.silent) throw e;\n      }\n    } finally {\n      this.executed.push(cmd);\n      setTimeout(() => this.executed.splice(this.executed.indexOf(cmd), 1), 60 * 60 * 1000);\n\n      this._unignore(cmd.session);\n    }\n  }\n\n  /**\n   * Ignore something (designed for [[CommandMessage#session]]).\n   * @param session The data to ignore.\n   */\n  private _ignore(session: string) {\n    this.ignore.push(session);\n  }\n\n  /**\n   * Stop ignoring something (designed for [[CommandMessage#session]]).\n   * @param session The data to unignore.\n   */\n  private _unignore(session: string) {\n    const index = this.ignore.indexOf(session);\n    if (index > -1) this.ignore.splice(index, 1);\n  }\n}\n"],"sourceRoot":"../../src"}